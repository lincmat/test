 #########################################
# Encrypted Properties File
#
# Use this file to encrypt sensitive properties
# such as database passwords for connection pools.
# To use, simple move the property from properties.txt
# into this file.  Upon system startup, the property
# will be encrypted (overwriting the cleartext value).
# The property will also be renamed to end with the
# suffix ".encrypted", however the property
# should be looked up using the original property key.
#
########################################
#
#Tue Dec 03 10:40:32 CAT 2019
contextpool.default.naming.security.credentials.encrypted=7e9ae9231827fca5d6077cd17b0b979d

[Type commands or "exit" to finish]
Shell> cat /apps/vignette/Portal/config/properties
 
[Type commands or "exit" to finish]
Shell> cat /apps/vignette/Portal/config/properties.txt
 ##########################################################################
# Copyright 1999-2007 Vignette Corporation.
# All rights reserved.
#
# THIS PROGRAM IS CONFIDENTIAL AND AN UNPUBLISHED WORK AND TRADE
# SECRET OF THE COPYRIGHT HOLDER, AND DISTRIBUTED ONLY UNDER RESTRICTION.
#
# EXCEPT AS EXPLICITLY STATED IN A WRITTEN AGREEMENT BETWEEN THE PARTIES,
# THE SOFTWARE IS PROVIDED AS-IS, WITHOUT WARRANTIES OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT,
# PERFORMANCE, AND QUALITY.
##########################################################################

##########################################################################
# Vignette Portal Configuration File
#
# properties.txt contains properties commonly changed when configuring
# Vignette Portal. After the installer runs, you can modify your
# Vignette Portal configuration by editing properties.txt. Examples of modifications
# you might want to make are configuring Vignette Portal to run behind a proxy server,
# changing the database properties, or using a user management scheme
# other than the default.
#
##########################################################################

##########JDBC DATABASE###################################################
#
# Controls the JDBC driver and database login.
#
# This section contains four properties for defining the database
# driver, URL, user name, and password that Vignette Portal uses to
# connect to your database.
#
# The default values are a simple JDBC configuration that allows Vignette Portal
# subsystems to share JDBC settings. In the default Vignette Portal configuration,
# database settings of all Vignette Portal subsystems point to "default.db", so they
# use the properties listed below.

# default.db.user and default.db.password are database-independent
# and must be configured regardless of which database you are using.
# In addition to these properties, you must uncomment the appropriate
# JDBC driver and URL properties for your specific database.
#
# Note that for all databases, except DB2, you should use the
# JDBC driver that Vignette provides. These drivers are located
# in VignetteApplicationServer/lib.
#
# DB2 drivers are not shipped with Vignette Portal. Use the driver that comes
# with the database and make these available to the CLASSPATH of
# the Vignette Portal Web application.

# A userid/username allowing login to the database.
# The Vignette Portal installer fills in the value for this property based on
# user input during the installation process. If you chose to configure
# your database manually, you must provide a value for this property.
default.db.user=vap_intra

# The password for the above userid.
# The Vignette Portal installer fills in the value for this property based on
# user input during the installation process. If you chose to configure
# your database manually, you must provide a value for this property.
default.db.password=vap_intra


# The Java class name of the JDBC driver.
# The Vignette Portal installer fills in the value for this property based on
# the database chosen during the installation process. If you chose to
# configure your database manually, you must provide a value for
# this property.
# Sample JDBC Drivers:
#    Oracle: oracle.jdbc.driver.OracleDriver
#    SQL Server(DataDirect): com.vignette.jdbc.sqlserver.SQLServerDriver
#    Sybase: com.sybase.jdbc3.jdbc.SybDriver
#    DB2(DataDirect): com.vignette.jdbc.db2.DB2Driver
#    MySql(DataDirect): com.vignette.jdbc.mysql.MySQLDriver
default.db.driver=oracle.jdbc.driver.OracleDriver

# The URL to the database. The syntax depends on the JDBC driver.
# The Vignette Portal installer fills in the value for this property based on
# the database chosen during the installation process. If you chose to
# configure your database manually, you must provide a value for
# this property.
# Sample JDBC URLs:
#    Oracle: jdbc:oracle:thin:@<host>:1521:<SID>
#    SQL Server(DataDirect): jdbc:vignette:sqlserver://<host>:1433;databasename=<database>;DescribeParameters=describeIfString
#    Sybase: jdbc:sybase:Tds:<host>:5001/<database>
#    DB2(DataDirect): jdbc:vignette:db2://<host>:50000;databasename=<database>
#    MySql(DataDirect): jdbc:vignette:mysql://<host>:3306;databasename=<database>
default.db.url=jdbc:oracle:thin:@omkn-scan:1521/ECMWEMPD

# The parameters of the JDBC driver (optional). Name=Value format is used to specify
# the driver parameters, with multiple name-value pairs separated by the semicolon
# character. For example:
#    default.db.parameters=param1=value1;param2=value2
# The Oracle driver needs a property (oracle.jdbc.J2EE13Compliant=true) to be fully 
# compliant with JDBC, especially with regard to conversion of Oracle timestamp and 
# date types to their JDBC equivalents. This property is ignored by non-Oracle databases. 
default.db.parameters=oracle.jdbc.J2EE13Compliant=true
##########END JDBC DATABASE###############################################

##########AUDITING CONFIGURATION############################################
# Set this flag to "true" to allow server administrator to enable or disable
# auditing from server console. If this flag is set to true, then server administrator
# can enable or disable auditing from server console. Then state of the audit flag
# in server settings take precedence over "com.vignette.portal.audit.enabled" property
# defined here.
com.vignette.portal.audit.console.enabled=true

# Set this flag to "true" to enable auditing. Any other value will disable
# auditing.
com.vignette.portal.audit.enabled=false

# Implementation class of the auditor to be used.
com.vignette.portal.audit.impl=com.vignette.portal.audit.internal.AuditInDB

# Connection pool to be used for the AuditInDB implementation
audit.db.connectionpool=default

##########END AUDITING CONFIGURATION########################################

com.vignette.config.skipdbconfiginfo=false

#Show an error message if unable to evaluate the segements 
#com.vignette.portal.portlet.segment.errormessage.enabled=false

##########CHAT SERVER CONFIGURATION########################################

#
# Uncomment the below required chat properties and set the appropriate values. 
# All of them need to be set.
#

# if you want to enable chat integration then this should be set to "true" �(default = false)
#com.vignette.portal.chatserver.enabled=true

# Specify the name of the ChatManager class implementation. This should implement the com.vignette.portal.chat.ChatManager interface.
#com.vignette.portal.chatserver.class.impl=com.vignette.portal.chat.DefaultChatManager

#Chat server host. Replace <CHAT_SERVER_HOST> with the hostname.
#com.vignette.portal.chatserver.hostname=<CHAT_SERVER_HOST>

# The domain that is set on the chat server
# For openfire server, browse to http://<CHAT_SERVER_HOST>:<CHAT_SERVER_PORT>/server-properties.jsp 
# and use the xmpp.domain property value.
#com.vignette.portal.chatserver.domain=<CHAT_SERVER_DOMAIN>

# The URL of the chat server where the site is running and our version of presence plugin is installed
#com.vignette.xmpp.presenceurl=http://<CHAT_SERVER_HOST>:<CHAT_SERVER_PORT>/plugins/vgnuserpresence/userstatus

#The port on which the chat server is listening for xmpp (chat) connection (default = 5222)
# Example: For openfire server, you can browse to http://<CHAT_SERVER_HOST>:<CHAT_SERVER_PORT>/client-connections-settings.jsp
# And use the 'Client Port' value.
#com.vignette.portal.chatserver.port=5222

#Whether chat user to be authenticated through SASL authentication, set value to true. 
#com.vignette.portal.chatserver.saslauthenabled=true

#Enable this property only if "JIVE-SHAREDSECRET" fix is installed on openfire chat server(i.e authvgn.jar is placed in <openfire-installdir>/lib directory) (default : false)
#com.vignette.portal.chatserver.SSOenabled=true

# Specify the security token value. 
# Note : for this to work you need to add a server property called "xmpp.auth.sharedSecret" in openfire. 
# Way to add it, access  "http://openfire-hostname:openfire-admin-port/server-properties.jsp and
# set property-name as xmpp.auth.sharedSecret and value as some string (eg; 123456).
# You need to mention same value for below property (eq; 123456)
#com.vignette.xmpp.security.token=<XMPP_AUTH_SHAREDSECRET>

#
# OPTIONAL chat properties. Uncomment and set the appropriate values. 
#

#this indicates whether vgn-httpbind.jar is deployed on a seperate machine or in different port ��(default = true)
#com.vignette.portal.boshlocation.local=true

#if vgn-httpbind.jar is deployed as a web app on different host. url of bind servlet (required only if "com.vignette.portal.boshlocation.local" is false)
#com.vignette.portal.boshlocation.url= http://<HOST>:<PORT>/vgnhttpbind/VgnHttpBindServlet

#
# OPTIONAL ADVANCED chat properties. Leave commented if unsure. 
#

#Number of threads for processing http requests
#com.vignette.xmpp.dispatcher.poolsize=8

#Thread inspect/tracks session
#com.vignette.xmpp.sessiontracker.interval=120

#XMPP session timeout value
#com.vignette.xmpp.connection.timeout=120

#Total amount of time connection Manager wait to reply back to client
#com.vignette.xmpp.read.timeout=10

# these setting are required for configuring UserPresenceManager

# Sets the maximum number of connections allowed for a given HostConfiguration.
#com.vignette.userstatus.maxConnectionPerHost=4

# Sets the maximum number of connections allowed for this connection manager.
#com.vignette.userstatus.maxTotalConnectionPerHost=4

#Connection timeout
#com.vignette.userstatus.defaultConnectionTimeout=140

#Socket timeout 
#com.vignette.userstatus.defaultSocketConnectionTimeout=90 �

# The refresh interval. This is the time it takes to fire an AJAX  call to detect the presence (in seconds).
#com.vignette.portal.chatserver.userStatusRefreshInterval=10

##########END OF CHAT SERVER CONFIGURATION########################################
com.vignette.portal.templating.enabled=true
com.vignette.community.um.enabled=true
com.vignette.community.um.sharedKey=changeme
com.vignette.community.um.maxDrift=3600000
com.vignette.community.collab.host=delcollab-01
com.vignette.community.collab.port=8070

##########################################################################
# Copyright 1999-2007 Vignette Corporation.
# All rights reserved.
#
# THIS PROGRAM IS CONFIDENTIAL AND AN UNPUBLISHED WORK AND TRADE
# SECRET OF THE COPYRIGHT HOLDER, AND DISTRIBUTED ONLY UNDER RESTRICTION.
#
# EXCEPT AS EXPLICITLY STATED IN A WRITTEN AGREEMENT BETWEEN THE PARTIES,
# THE SOFTWARE IS PROVIDED AS-IS, WITHOUT WARRANTIES OF ANY KIND, EXPRESS
# OR IMPLIED, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT,
# PERFORMANCE, AND QUALITY.
##########################################################################

##########################################################################
# JNDI CONTEXT POOL : Microsoft Active Directory - Global Catalog
##########################################################################

# Class name for the JNDI context pool.
contextpool.default.type=com.epicentric.jndi.ContextPoolService

# Extra descriptors for the context pool.
contextpool.default.name=PortalServerContextPool
contextpool.default.description=Main PortalServer Context Pool Service

# JNDI ContextPoolService: optional properties
# When contextpool.default.verifyGetContext is set to true, Portal tests the
# connection in the LDAP context pool before using it. If it detects a bad
# connection, Portal removes it from the pool and gets a new connection.

contextpool.default.verifyGetContext=false
# Note: if contextpool.default.verifyGetContext=true then additionally you need 
# to set verifyGetContext.user.context=somevalue. Ex: verifyGetContext.user.context=ou=testOU
# verifyGetContext.user.context=

# When contextpool.default.verifyReturns is set to true, Portal tests the context. 
# If it detects a bad context it discards the context.
contextpool.default.verifyReturns=false

##########################################################################
# LDAP Service Provider Environmental Properties
#
# When two or more JNDI clients are running in the same Java virtual
# machine, it is possible for the different clients to use the same
# global property name. To prevent Portal from using a similarly named
# property of another JNDI client, Vignette provides context pool 
# properties in two forms: java.*.* and contextpool.*.*. If naming
# collisions for properties occur, use the contextpool.*.* properties
# instead of the java.*.* properties. By default, Portal uses the
# contextpool.*.* form.
#
# Portal first looks for a specific property using the contextpool.*.*
# notation. If it does not exist, Portal looks for the equivalent JNDI
# common name. 
#
# For example, Portal looks for contextpool.default.naming.provider.url.
# If it cannot find this property, it then looks for 
# java.naming.provider.url.

# javax.naming.Context.PROVIDER_URL (Required)
# Location or host name and port (port is optional; typically, 389) of
# the directory server, plus a nonempty base distinguished name that
# identifies the root of the directory tree that Portal uses. The base
# distinguished name is the LDAP equivalent of a fully qualified
# domain name, encoded if neccesary as per LDAP distinguished name requirements.  
# The distinguished name must be equivalent to the base DN in the LDAP Tree.
contextpool.default.naming.provider.url=ldap://umkn-adc02:3268/DC=int,DC=unisa,DC=ac,DC=za

# javax.naming.Context.SECURITY_PRINCIPAL (Required)
# Full DN of the user to bind to the directory. This account must have
# permission to read, write, add, delete, search, and compare entries 
# under the directory tree where Portal users and user groups live.
contextpool.default.naming.security.principal=CN=vgnbindprod,OU=Service Accounts,OU=Enterprise Admin,DC=int,DC=unisa,DC=ac,DC=za

# javax.naming.Context.SECURITY_CREDENTIALS (Required)
# Password of the user identified as the security principal.
# NOTE: You can comment out this property for read-only mode.
contextpool.default.naming.security.credentials=V1gn3tt3

# javax.naming.Context.SECURITY_AUTHENTICATION
# The authentication method that Portal uses. If "simple," Portal uses plain-text
# name/password authentication. Alternatively, you can provide a 
# space-separated list of one or more SASL mechanisms, in which case the 
# first supported mechanism on the list is used. By default, Portal uses
# simple authentication.
contextpool.default.naming.security.authentication=simple

# javax.naming.Context.SECURITY_PROTOCOL
# The security protocol to use for encryption purposes.
# Uncomment only if you are using SSL or SL encryption.
#contextpool.default.naming.security.protocol=ssl

# javax.naming.Context.INITIAL_CONTEXT_FACTORY (Required)
# The java class responsible for manufacturing contexts.
contextpool.default.naming.factory.initial=com.sun.jndi.ldap.LdapCtxFactory

# javax.naming.Context.REFERRAL
# How referrals encountered by the service provider are to be processed. 
# The value of the property is one of the following strings: 
# 	follow - follow referrals automatically 
# 	ignore - ignore referrals 
# 	throw - throw ReferralException when a referral is encountered. 
# If this property is not specified, the default is determined by the provider. 
contextpool.default.naming.referral=follow

# java.naming.ldap.version
# The value of this property is a string that specifies the protocol version for 
# the provider. The following values are defined for this property:
#       2 - selects LDAP version 2 (LDAPv2).
#       3 - selects LDAP version 3 (LDAPv3).
# If this property is not set then the provider first attempts to bind using 
# LDAP v3 and fails over to using LDAP v2 if a protocol error is received from 
# the server. This failover mechanism is only used when the 
# java.naming.security.authentication property indicates anonymous bind or 
# simple authentication. 
#contextpool.default.naming.ldap.version=3

# java.naming.ldap.factory.socket
# The value of this property is a string identifying the class name of a socket 
# factory. This property is used to override the default socket factory. 
# The class specified in this property must implement the javax.net.SocketFactory 
# interface. See http://java.sun.com/j2se/1.4/docs/guide/security/jsse/JSSERefGuide.html 
# for more information. See SSL for information on how to use SSL.
# In addition, if the  java.naming.security.protocol  property is set, then the 
# socket factory identified by this property must create sockets which are 
# appropriate for that protocol setting. For example, if the security protocol 
# is set to ssl then the socket factory must create SSL-compliant sockets.
# No default is defined for this property. 
#contextpool.default.naming.ldap.factory.socket=

# java.naming.ldap.derefAliases
# Uncomment this line to turn off aliases dereferencing during search operations.
# Note: the only supported value for this property is "never"
#contextpool.default.naming.ldap.derefAliases=never

#############################################################
# Other Properties

# Maximum number of contexts available in the pool.
contextpool.default.poolsize=25

# Minimum number of contexts in the pool.
contextpool.default.lowerthreshold=0

# Default context timeout (in seconds). A process that is waiting for a
# context will not receive a timeout exception until this amount of time
# has expired.
contextpool.default.timeout=60

# Default context lease time (in seconds). If a process does not give
# back a context during this amount of time, the context is discarded
# and a new one is created. This property reduces the performance impact
# caused by processes that take contexts and never give them back. If
# a process gives back a context after its lease time has expired, the
# context pool simply kills it.
contextpool.default.lease=45

# Context sleep time (in minutes). The context pool breaks a
# context if it is not used for this amount of time.
contextpool.default.sleep=10
# To enable this behavior you must uncomment the following property:
#contextpool.default.sleepEnabled=true
# This variable is used to define whether all the user group should be loaded during startup of
# portal instance or loaded as on demand.
jndi.usergroup.preload=false


# This variable is used to define whether all the ldap dynamic groups should be loaded during startup of
# portal instance or loaded as on demand.
jndi.dynamicgroup.preload=false

# Additional attributes to query the AD configuration
jndi.workaroundemptynamelookup=true
jndi.maxpagesize=1000
jndi.maxpagesize.rdn="CN=Default Query Policy,CN=Query\226Policies,CN=Directory Service,CN=Windows NT, CN=Services,CN=Configuration"
jndi.maxpagesize.attribute="lDAPAdminLimits"

# Security recommendation 21517501
portal.diag.enabled=false
